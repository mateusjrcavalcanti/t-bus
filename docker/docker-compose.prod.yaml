services:

  postgres:
    container_name: unibus_postgres
    image: postgres   
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - unibus_postgres:/data/postgres
      - "./postgres/docker-entrypoint-initdb.d/1-create-database.sh:/docker-entrypoint-initdb.d/1-create-database.sh"
    ports:
      - "5432:5432"
    restart: unless-stopped
  
  web:
    container_name: unibus_web
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      target: dev
    restart: always
    environment:
      - NODE_ENV=development
    env_file:
      - ../.env
    depends_on:
      - postgres
    volumes:
      - /app/node_modules
    command: pnpm dev --filter='@unibus/web'
  
  websocket:
    container_name: unibus_websocket
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
      target: dev
      args:
        PACKAGE: '@unibus/websocket'
    restart: always
    environment:
      - NODE_ENV=development
    depends_on:
      - web
    volumes:
      - /app/node_modules
    command: pnpm dev --filter='@unibus/websocket'
    
  mosquitto:
    container_name: unibus_mqtt
    build:
      context: ./mosquitto
    env_file:
      - ../.env
    ports:
      - 1883:1883
      - 9001:9001
    depends_on:
      - postgres
      - web

  proxy:
    image: nginx:latest
    container_name: unibus_proxy 
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-unibus.fbi.com}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/certs/:/etc/nginx/certs/:ro
      - ./certbot/www:/var/www/certbot/:ro
    depends_on:
      - mosquitto
      - web
      - websocket

volumes:
  unibus_postgres: